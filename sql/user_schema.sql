CREATE SCHEMA IF NOT EXISTS users;

CREATE TYPE identity_enum AS ENUM('google', 'elixir');

CREATE TABLE IF NOT EXISTS users.users (
    id integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    username            varchar(100)              DEFAULT NULL,
    email               varchar(100) UNIQUE       NOT NULL,
    affiliation         varchar(100)              DEFAULT NULL,
    country             varchar(100)              DEFAULT NULL,
    identity            varchar(100)              NOT NULL,
    identity_type       identity_enum             NOT NULL,
    UNIQUE (identity, identity_type)
);

CREATE TABLE IF NOT EXISTS users.dataset_access (
    id integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    dataset          integer         NOT NULL REFERENCES data.datasets,
    user_id          integer         NOT NULL REFERENCES users.users,
    wants_newsletter boolean         DEFAULT false,
    is_admin         boolean         DEFAULT false,
    UNIQUE (dataset, user_id)
);

CREATE TYPE access_action AS ENUM('access_granted', 'access_revoked',
                                  'access_requested', 'private_link');

CREATE TABLE IF NOT EXISTS users.user_access_log (
    id integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    user_id     integer         NOT NULL REFERENCES users.users,
    dataset     integer         NOT NULL REFERENCES data.datasets,
    ts          timestamp       NOT NULL DEFAULT current_timestamp,
    "action"    access_action   DEFAULT NULL
);

CREATE TABLE IF NOT EXISTS users.user_consent_log (
    id integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    user_id         integer         NOT NULL REFERENCES users.users,
    dataset_version integer         NOT NULL REFERENCES data.dataset_versions,
    ts              timestamp       NOT NULL DEFAULT current_timestamp
);

CREATE TABLE IF NOT EXISTS users.user_download_log (
    id integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    user_id         integer         NOT NULL REFERENCES users.users,
    dataset_file    integer         NOT NULL REFERENCES data.dataset_files,
    ts              timestamp       NOT NULL DEFAULT current_timestamp
);
